{"version":3,"file":"static/js/201.eea16ee6.chunk.js","mappings":"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","sources":["API/getApi.js","webpack://goit-react-hw-05-movies/./src/components/filmGalleryItem/FilmGalleryItem.module.css?a80b","components/filmGalleryItem/FilmGalleryItem.jsx","webpack://goit-react-hw-05-movies/./src/components/filmGallery/FilmGallery.module.css?061f","components/filmGallery/FilmGallery.jsx","webpack://goit-react-hw-05-movies/./src/components/loader/Loader.module.css?198e","components/loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/searchForm/SearchForm.module.css?1aef","components/searchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/components/button/Button.module.css?8a78","components/button/Button.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function getTrending() {\n  const key = '87a0e8a85c96bb9057448a7523c38c39';\n  const url = 'https://api.themoviedb.org/3/trending/all/day';\n  const filter = `?api_key=${key}`;\n  const apiUrl = `${url}${filter}`;\n  return await axios.get(apiUrl);\n}\n\nexport async function getSearchMovies(query, page = 1) {\n  const key = '87a0e8a85c96bb9057448a7523c38c39';\n  const url = 'https://api.themoviedb.org/3/search/movie';\n  const filter = `?api_key=${key}&query=${query}&language=en-US&page=${page}&include_adult=false`;\n  const apiUrl = `${url}${filter}`;\n  return await axios.get(apiUrl);\n}\n\nexport async function getMovieDetails(movieId) {\n  const key = '87a0e8a85c96bb9057448a7523c38c39';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}`;\n  const filter = `?api_key=${key}&language=en-US`;\n  const apiUrl = `${url}${filter}`;\n  return await axios.get(apiUrl);\n}\n\nexport async function getMovieCredits(movieId) {\n  const key = '87a0e8a85c96bb9057448a7523c38c39';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n  const filter = `?api_key=${key}&language=en-US`;\n  const apiUrl = `${url}${filter}`;\n  return await axios.get(apiUrl);\n}\n\nexport async function getMovieReviews(movieId) {\n  const key = '87a0e8a85c96bb9057448a7523c38c39';\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n  const filter = `?api_key=${key}&language=en-US&page=1`;\n  const apiUrl = `${url}${filter}`;\n  return await axios.get(apiUrl);\n}","// extracted by mini-css-extract-plugin\nexport default {\"galleryItem\":\"FilmGalleryItem_galleryItem__FpxH3\",\"filmTitle\":\"FilmGalleryItem_filmTitle__VQKHZ\",\"wrapper\":\"FilmGalleryItem_wrapper__GRmRb\",\"voteText\":\"FilmGalleryItem_voteText__X9baQ\",\"link\":\"FilmGalleryItem_link__kVpMh\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PosterPlug from '../../utilities/posterPlug.jpg';\nimport css from './FilmGalleryItem.module.css';\n\n\nconst FilmGalleryItem = ({ id, title, poster, voteAverage, voteCount }) => {\n  const location = useLocation();\n  return (\n    <li className={css.galleryItem}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        className={css.link}\n      >\n        <h2 className={css.filmTitle}>\n          {title ? title : 'Movie without a title'}\n        </h2>\n        <img\n          className={css.galleryItemImage}\n          src={\n            poster ? `https://image.tmdb.org/t/p/w500/${poster}` : PosterPlug\n          }\n          alt={title}\n        />\n\n        <div className={css.wrapper}>\n          <p className={css.voteText}>Vote average: {voteAverage}</p>\n          <p className={css.voteText}>Vote count: {voteCount}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nFilmGalleryItem.propTypes = {\n  title: PropTypes.string,\n  poster: PropTypes.string,\n  voteAverage: PropTypes.number,\n  voteCount: PropTypes.number,\n};\n\nexport default FilmGalleryItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"gallery\":\"FilmGallery_gallery__QN8QK\"};","import PropTypes from 'prop-types';\nimport FilmGalleryItem from '../filmGalleryItem/FilmGalleryItem';\nimport css from './FilmGallery.module.css';\n\nconst FilmGallery = ({ films }) => {\n  return (\n    <ul className={css.gallery}>\n      {films &&\n        films.map(({ id, title, poster, voteAverage, voteCount }) => (\n          <FilmGalleryItem\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        ))}\n    </ul>\n  );\n};\n\nFilmGallery.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n\nexport default FilmGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Loader_wrapper__Co8xo\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.wrapper}>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__Rrjro\",\"form\":\"SearchForm_form__ThZqH\",\"searchFormButton\":\"SearchForm_searchFormButton__q+V9f\",\"buttonLabel\":\"SearchForm_buttonLabel__+x66S\",\"searchFormInput\":\"SearchForm_searchFormInput__zLhEH\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport css from './SearchForm.module.css';\n\nconst SearchForm =  ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => setQuery(e.currentTarget.value.toLowerCase());\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введіть значення');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <header className={css.searchForm}>\n        <form className={css.form} onSubmit={handleSubmitForm}>\n          <button type=\"submit\" className={css.searchFormButton}>\n            <span className={css.buttonLabel}>Search</span>\n          </button>\n\n          <input\n            className={css.searchFormInput}\n            type=\"text\"\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__Zk130\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className=\"buttonContainer\">\n      <button type=\"button\" className={css.button} onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","import { useSearchParams, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport SearchForm from '../../components/searchForm/SearchForm';\nimport { getSearchMovies } from '../../API/getApi';\nimport FilmGallery from '../../components/filmGallery/FilmGallery';\nimport Button from '../../components/button/Button';\nimport Loader from '../../components/loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Movie = () => {\n  const [query, setQuery] = useState('');\n  const [filmsQuery, setfilmsQuery] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const value = searchParams.get('query');\n  useEffect(() => {\n    if (value && page) {\n      setStatus('pending');\n\n      getSearchMovies(value, page)\n        .then(responce => {\n          const filmsData = responce.data;\n          if (filmsData.results.length === 0) {\n            return Promise.reject(new Error(`No films with name \"${query}\"`));\n          }\n          const filmsQuery = filmsData.results.map(result => ({\n            id: result.id,\n            title: result.original_title,\n            poster: result.poster_path,\n            voteAverage: result.vote_average,\n            voteCount: result.vote_count,\n          }));\n          setfilmsQuery(prevState => [...prevState, ...filmsQuery]);\n          setStatus('resolved');\n        })\n        .catch(error => {\n          setError(error);\n          setStatus('rejected');\n        });\n    }\n  }, [value, page, query]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setPage(1);\n    setfilmsQuery([]);\n    setSearchParams({ query });\n  };\n\n  const onNextFetch = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  if (status === 'idle') {\n    return (\n      <>\n        <SearchForm onSubmit={handleFormSubmit} />\n        <ToastContainer autoClose={3000} />;\n      </>\n    );\n  }\n\n  if (status === 'rejected') {\n    return (\n      <div>\n        <SearchForm onSubmit={handleFormSubmit} />\n        {error && <h1>{error.message}</h1>}\n      </div>\n    );\n  }\n\n  if (status === 'pending' || 'resolved') {\n    return (\n      <>\n        <SearchForm onSubmit={handleFormSubmit} />\n        {status !== 'resolved' && <Loader />}\n        <FilmGallery films={filmsQuery} />\n        {status !== 'pending' && <Button onClick={onNextFetch} />}\n        <Link to=\"/movieId\"></Link>\n      </>\n    );\n  }\n};\n\nexport default Movie;\n"],"names":["getTrending","filter","apiUrl","axios","getSearchMovies","query","page","url","getMovieDetails","movieId","getMovieCredits","getMovieReviews","id","title","poster","voteAverage","voteCount","location","useLocation","className","css","to","state","from","src","PosterPlug","alt","films","map","strokeColor","strokeWidth","animationDuration","width","visible","onSubmit","useState","setQuery","e","preventDefault","trim","target","reset","toast","type","placeholder","onChange","currentTarget","value","toLowerCase","onClick","filmsQuery","setfilmsQuery","useSearchParams","searchParams","setSearchParams","setPage","error","setError","status","setStatus","get","useEffect","then","responce","filmsData","data","results","length","Promise","reject","Error","result","original_title","poster_path","vote_average","vote_count","prevState","catch","handleFormSubmit","autoClose","message","Loader","FilmGallery"],"sourceRoot":""}